// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

#import "NativeApi+Private.h"
#import "NativeApi.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "NativeApi+Private.h"
#import "NativeApiPhotosResponse+Private.h"
#import "NativeApiPostsResponse+Private.h"
#import "NativeHttp+Private.h"
#import "NativePostModel+Private.h"
#import "NativeThreadLauncher+Private.h"
#include <exception>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface NativeApi ()

- (id)initWithCpp:(const std::shared_ptr<::djinni_rest_gen::Api>&)cppRef;

@end

@implementation NativeApi {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::djinni_rest_gen::Api>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::djinni_rest_gen::Api>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable NativeApi *)createApi:(nullable id<NativeThreadLauncher>)launcher
                             http:(nullable id<NativeHttp>)http {
    try {
        auto r = ::djinni_rest_gen::Api::create_api(::djinni_generated::ThreadLauncher::toCpp(launcher),
                                                    ::djinni_generated::Http::toCpp(http));
        return ::djinni_generated::Api::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getPostsIndex:(nullable id<NativeApiPostsResponse>)apiPostsResponse {
    try {
        _cppRefHandle.get()->get_posts_index(::djinni_generated::ApiPostsResponse::toCpp(apiPostsResponse));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getPostsShow:(int64_t)postId
    apiPostsResponse:(nullable id<NativeApiPostsResponse>)apiPostsResponse {
    try {
        _cppRefHandle.get()->get_posts_show(::djinni::I64::toCpp(postId),
                                            ::djinni_generated::ApiPostsResponse::toCpp(apiPostsResponse));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (BOOL)isPostValid:(nonnull NativePostModel *)postModel {
    try {
        auto r = _cppRefHandle.get()->is_post_valid(::djinni_generated::PostModel::toCpp(postModel));
        return ::djinni::Bool::fromCpp(r);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getPhotosIndex:(nullable id<NativeApiPhotosResponse>)apiPhotosResponse {
    try {
        _cppRefHandle.get()->get_photos_index(::djinni_generated::ApiPhotosResponse::toCpp(apiPhotosResponse));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getPhotosShow:(int64_t)photoId
    apiPhotosResponse:(nullable id<NativeApiPhotosResponse>)apiPhotosResponse {
    try {
        _cppRefHandle.get()->get_photos_show(::djinni::I64::toCpp(photoId),
                                             ::djinni_generated::ApiPhotosResponse::toCpp(apiPhotosResponse));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto Api::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto Api::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<NativeApi>(cpp);
}

}  // namespace djinni_generated

@end
