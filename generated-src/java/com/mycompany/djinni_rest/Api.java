// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

package com.mycompany.djinni_rest;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class Api {
    public abstract void getPostsIndex(ApiPostsResponse apiPostsResponse);

    public abstract void getPostsShow(long postId, ApiPostsResponse apiPostsResponse);

    public abstract boolean isPostValid(PostModel postModel);

    public abstract void getPhotosIndex(ApiPhotosResponse apiPhotosResponse);

    public abstract void getPhotosShow(long photoId, ApiPhotosResponse apiPhotosResponse);

    public static native Api createApi(ThreadLauncher launcher, Http http);

    private static final class CppProxy extends Api
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public void getPostsIndex(ApiPostsResponse apiPostsResponse)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getPostsIndex(this.nativeRef, apiPostsResponse);
        }
        private native void native_getPostsIndex(long _nativeRef, ApiPostsResponse apiPostsResponse);

        @Override
        public void getPostsShow(long postId, ApiPostsResponse apiPostsResponse)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getPostsShow(this.nativeRef, postId, apiPostsResponse);
        }
        private native void native_getPostsShow(long _nativeRef, long postId, ApiPostsResponse apiPostsResponse);

        @Override
        public boolean isPostValid(PostModel postModel)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_isPostValid(this.nativeRef, postModel);
        }
        private native boolean native_isPostValid(long _nativeRef, PostModel postModel);

        @Override
        public void getPhotosIndex(ApiPhotosResponse apiPhotosResponse)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getPhotosIndex(this.nativeRef, apiPhotosResponse);
        }
        private native void native_getPhotosIndex(long _nativeRef, ApiPhotosResponse apiPhotosResponse);

        @Override
        public void getPhotosShow(long photoId, ApiPhotosResponse apiPhotosResponse)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getPhotosShow(this.nativeRef, photoId, apiPhotosResponse);
        }
        private native void native_getPhotosShow(long _nativeRef, long photoId, ApiPhotosResponse apiPhotosResponse);
    }
}
