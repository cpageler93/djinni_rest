// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from djinni_rest.djinni

#include "NativeHttpCallback.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeHttpCallback::NativeHttpCallback() : ::djinni::JniInterface<::djinni_rest_gen::HttpCallback, NativeHttpCallback>("com/mycompany/djinni_rest/HttpCallback$CppProxy") {}

NativeHttpCallback::~NativeHttpCallback() = default;

NativeHttpCallback::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeHttpCallback::JavaProxy::~JavaProxy() = default;

void NativeHttpCallback::JavaProxy::on_success(int16_t c_http_code, const std::string & c_data) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeHttpCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onSuccess,
                           ::djinni::get(::djinni::I16::fromCpp(jniEnv, c_http_code)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_data)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeHttpCallback::JavaProxy::on_failure() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeHttpCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onFailure);
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_com_mycompany_djinni_1rest_HttpCallback_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<djinni::CppProxyHandle<::djinni_rest_gen::HttpCallback>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_mycompany_djinni_1rest_HttpCallback_00024CppProxy_native_1onSuccess(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jshort j_httpCode, jstring j_data)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::djinni_rest_gen::HttpCallback>(nativeRef);
        ref->on_success(::djinni::I16::toCpp(jniEnv, j_httpCode),
                        ::djinni::String::toCpp(jniEnv, j_data));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_mycompany_djinni_1rest_HttpCallback_00024CppProxy_native_1onFailure(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::djinni_rest_gen::HttpCallback>(nativeRef);
        ref->on_failure();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
