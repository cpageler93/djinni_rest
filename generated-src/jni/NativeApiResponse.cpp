// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from djinni_rest.djinni

#include "NativeApiResponse.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeApiResponse::NativeApiResponse() : ::djinni::JniInterface<::djinni_rest_gen::ApiResponse, NativeApiResponse>() {}

NativeApiResponse::~NativeApiResponse() = default;

NativeApiResponse::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeApiResponse::JavaProxy::~JavaProxy() = default;

void NativeApiResponse::JavaProxy::on_success(const std::string & c_result) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeApiResponse>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onSuccess,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_result)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeApiResponse::JavaProxy::on_failure() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeApiResponse>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onFailure);
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
