// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

#include "NativeApiPostsResponse.hpp"  // my header
#include "Marshal.hpp"
#include "NativePostModel.hpp"

namespace djinni_generated {

NativeApiPostsResponse::NativeApiPostsResponse() : ::djinni::JniInterface<::djinni_rest_gen::ApiPostsResponse, NativeApiPostsResponse>() {}

NativeApiPostsResponse::~NativeApiPostsResponse() = default;

NativeApiPostsResponse::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeApiPostsResponse::JavaProxy::~JavaProxy() = default;

void NativeApiPostsResponse::JavaProxy::on_index_success(const std::vector<::djinni_rest_gen::PostModel> & c_result) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeApiPostsResponse>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onIndexSuccess,
                           ::djinni::get(::djinni::List<::djinni_generated::NativePostModel>::fromCpp(jniEnv, c_result)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeApiPostsResponse::JavaProxy::on_show_success(const ::djinni_rest_gen::PostModel & c_result) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeApiPostsResponse>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onShowSuccess,
                           ::djinni::get(::djinni_generated::NativePostModel::fromCpp(jniEnv, c_result)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeApiPostsResponse::JavaProxy::on_failure() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeApiPostsResponse>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onFailure);
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
