// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from http.djinni

#include "NativeHttp.hpp"  // my header
#include "Marshal.hpp"
#include "NativeHttpCallback.hpp"
#include "NativeHttpMethod.hpp"

namespace djinni_generated {

NativeHttp::NativeHttp() : ::djinni::JniInterface<::djinni_rest_gen::Http, NativeHttp>() {}

NativeHttp::~NativeHttp() = default;

NativeHttp::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeHttp::JavaProxy::~JavaProxy() = default;

void NativeHttp::JavaProxy::send(::djinni_rest_gen::HttpMethod c_http_method, const std::string & c_url, const std::shared_ptr<::djinni_rest_gen::HttpCallback> & c_callback) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeHttp>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_send,
                           ::djinni::get(::djinni_generated::NativeHttpMethod::fromCpp(jniEnv, c_http_method)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_url)),
                           ::djinni::get(::djinni_generated::NativeHttpCallback::fromCpp(jniEnv, c_callback)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
