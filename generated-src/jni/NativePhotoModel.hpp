// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from api.djinni

#pragma once

#include "djinni_support.hpp"
#include "photo_model.hpp"

namespace djinni_generated {

class NativePhotoModel final {
public:
    using CppType = ::djinni_rest_gen::PhotoModel;
    using JniType = jobject;

    using Boxed = NativePhotoModel;

    ~NativePhotoModel();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    NativePhotoModel();
    friend ::djinni::JniClass<NativePhotoModel>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/mycompany/djinni_rest/PhotoModel") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(JJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_mId { ::djinni::jniGetFieldID(clazz.get(), "mId", "J") };
    const jfieldID field_mAlbumId { ::djinni::jniGetFieldID(clazz.get(), "mAlbumId", "J") };
    const jfieldID field_mTitle { ::djinni::jniGetFieldID(clazz.get(), "mTitle", "Ljava/lang/String;") };
    const jfieldID field_mUrl { ::djinni::jniGetFieldID(clazz.get(), "mUrl", "Ljava/lang/String;") };
    const jfieldID field_mThumbnailUrl { ::djinni::jniGetFieldID(clazz.get(), "mThumbnailUrl", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
